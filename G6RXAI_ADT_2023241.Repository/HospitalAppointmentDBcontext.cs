using G6RXAI_ADT_2023241.Models;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using System.Threading.Tasks;

namespace G6RXAI_ADT_2023241.Repository
{
    public class HospitalAppointmentDbContext : DbContext
    {
        public DbSet<Patient> Patients { get; set; }
        public DbSet<Doctor> Doctors { get; set; }
        public DbSet<Appointment> Appointments { get; set; }
        protected override void OnConfiguring(DbContextOptionsBuilder Build)
        {
            Build


                .UseInMemoryDatabase("HospitalDatabase")
                .UseLazyLoadingProxies();
            base.OnConfiguring(Build);
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {


            // one-to-many relationship between Doctor  and Patient
            modelBuilder.Entity<Models.Patient>()
                .HasOne(patient => patient.Doctor)
                .WithMany(doctor => doctor.Patients)
                .HasForeignKey(patient => patient.DoctorId);

            //  one-to-many relationship between Doctor  and Appointment 
            modelBuilder.Entity<Models.Appointment>()
                .HasOne(appointment => appointment.CarBrand)
                .WithMany(doctor => doctor.CarRents)
                .HasForeignKey(appointment => appointment.CarBrandId);

            //  one-to-many relationship between Patient  and Appointment 
            modelBuilder.Entity<Models.Appointment>()

                .HasOne(appointment => appointment.CarBrand)
                .WithMany(patient => patient.CarRents)
                .HasForeignKey(appointment => appointment.CarBrandId);

            base.OnModelCreating(modelBuilder);

            // Seed data for CarBrand
            modelBuilder.Entity<Patient>().HasData(
                new Doctor { Name = "Toyota" },
                new Doctor { Name = "Ford" }
            );

            // The IDs for CarBrand are assumed to be generated by the database starting at 1.
            // Seed data for CarModel with explicit foreign keys to CarBrand.
            modelBuilder.Entity<CarModel>().HasData(
                new Patient { PatientId = 1, Name = "Corolla", DoctorId = 1,BirthDate =},
                new Patient { PatientId = 2, Name = "Camry",   DoctorId = 1 BirthDate =},
                new Patient { PatientId = 3, Name = "Mustang", DoctorId = 2 BirthDate =}
            );

            // Seed data for CarRents with explicit foreign keys to CarBrand and CarModel.
            modelBuilder.Entity<CarRents>().HasData(
                new Appointment { CarRentId = 1, RentalDate = DateTime.Parse("2023-01-01"), CarBrandId = 1, CarModelId = 1 },
                new Appointment { CarRentId = 2, RentalDate = DateTime.Parse("2023-01-02"), CarBrandId = 2, CarModelId = 3 }
          );


        }
    }
}
